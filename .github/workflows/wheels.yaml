name: wheels
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  wheels:
    name: Build wheels
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu
            architecture: x86_64
          - os: ubuntu
            architecture: aarch64
          - os: macos
            architecture: x86_64
          - os: macos
            architecture: arm64
          - os: windows
            architecture: AMD64
          - os: windows
            architecture: x86
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
        if: runner.os == 'Linux' && matrix.architecture == 'aarch64'
      - uses: bus1/cabuild/action/msdevshell@v1
        with:
          architecture: x64
        if: runner.os == 'Windows' && matrix.architecture == 'AMD64'
      - uses: bus1/cabuild/action/msdevshell@v1
        with:
          architecture: x86
        if: runner.os == 'Windows' && matrix.architecture == 'x86'
      - run: pipx run cibuildwheel==2.19.1
        env:
          CIBW_SKIP: pp* *-musllinux*
          CIBW_ARCHS: ${{ matrix.architecture }}
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.architecture }}
          path: wheelhouse/*.whl

  sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: python -m pip install build
      - run: python -m build --sdist
      - uses: actions/upload-artifact@v4
        with:
          name: source
          path: dist/*.tar.gz

  upload:
    name: Upload to PyPI
    needs:
      - wheels
      - sdist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist
      - run: python -m pip install twine
      - run: python -m twine upload --skip-existing dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
